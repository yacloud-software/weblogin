// Code generated by protoc-gen-go.
// source: golang.conradwood.net/apis/gomodule/gomodule.proto
// DO NOT EDIT!

/*
Package gomodule is a generated protocol buffer package.

It is generated from these files:
	golang.conradwood.net/apis/gomodule/gomodule.proto

It has these top-level messages:
*/
package gomodule

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import h2gproxy "golang.conradwood.net/apis/h2gproxy"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for GoModuleService service

type GoModuleServiceClient interface {
	// h2gproxy endpoint
	StreamHTTP(ctx context.Context, in *h2gproxy.StreamRequest, opts ...grpc.CallOption) (GoModuleService_StreamHTTPClient, error)
}

type goModuleServiceClient struct {
	cc *grpc.ClientConn
}

func NewGoModuleServiceClient(cc *grpc.ClientConn) GoModuleServiceClient {
	return &goModuleServiceClient{cc}
}

func (c *goModuleServiceClient) StreamHTTP(ctx context.Context, in *h2gproxy.StreamRequest, opts ...grpc.CallOption) (GoModuleService_StreamHTTPClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_GoModuleService_serviceDesc.Streams[0], c.cc, "/gomodule.GoModuleService/StreamHTTP", opts...)
	if err != nil {
		return nil, err
	}
	x := &goModuleServiceStreamHTTPClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type GoModuleService_StreamHTTPClient interface {
	Recv() (*h2gproxy.StreamDataResponse, error)
	grpc.ClientStream
}

type goModuleServiceStreamHTTPClient struct {
	grpc.ClientStream
}

func (x *goModuleServiceStreamHTTPClient) Recv() (*h2gproxy.StreamDataResponse, error) {
	m := new(h2gproxy.StreamDataResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// Server API for GoModuleService service

type GoModuleServiceServer interface {
	// h2gproxy endpoint
	StreamHTTP(*h2gproxy.StreamRequest, GoModuleService_StreamHTTPServer) error
}

func RegisterGoModuleServiceServer(s *grpc.Server, srv GoModuleServiceServer) {
	s.RegisterService(&_GoModuleService_serviceDesc, srv)
}

func _GoModuleService_StreamHTTP_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(h2gproxy.StreamRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(GoModuleServiceServer).StreamHTTP(m, &goModuleServiceStreamHTTPServer{stream})
}

type GoModuleService_StreamHTTPServer interface {
	Send(*h2gproxy.StreamDataResponse) error
	grpc.ServerStream
}

type goModuleServiceStreamHTTPServer struct {
	grpc.ServerStream
}

func (x *goModuleServiceStreamHTTPServer) Send(m *h2gproxy.StreamDataResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _GoModuleService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "gomodule.GoModuleService",
	HandlerType: (*GoModuleServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "StreamHTTP",
			Handler:       _GoModuleService_StreamHTTP_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "golang.conradwood.net/apis/gomodule/gomodule.proto",
}

func init() { proto.RegisterFile("golang.conradwood.net/apis/gomodule/gomodule.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 172 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0x32, 0x4a, 0xcf, 0xcf, 0x49,
	0xcc, 0x4b, 0xd7, 0x4b, 0xce, 0xcf, 0x2b, 0x4a, 0x4c, 0x29, 0xcf, 0xcf, 0x4f, 0xd1, 0xcb, 0x4b,
	0x2d, 0xd1, 0x4f, 0x2c, 0xc8, 0x2c, 0xd6, 0x4f, 0xcf, 0xcf, 0xcd, 0x4f, 0x29, 0xcd, 0x49, 0x85,
	0x33, 0xf4, 0x0a, 0x8a, 0xf2, 0x4b, 0xf2, 0x85, 0x38, 0x60, 0x7c, 0x29, 0x7c, 0xba, 0x33, 0x8c,
	0xd2, 0x0b, 0x8a, 0xf2, 0x2b, 0x2a, 0xe1, 0x0c, 0x88, 0x6e, 0xa3, 0x08, 0x2e, 0x7e, 0xf7, 0x7c,
	0x5f, 0xb0, 0xfe, 0xe0, 0xd4, 0xa2, 0xb2, 0xcc, 0xe4, 0x54, 0x21, 0x57, 0x2e, 0xae, 0xe0, 0x92,
	0xa2, 0xd4, 0xc4, 0x5c, 0x8f, 0x90, 0x90, 0x00, 0x21, 0x71, 0x3d, 0xb8, 0x0e, 0x88, 0x68, 0x50,
	0x6a, 0x61, 0x69, 0x6a, 0x71, 0x89, 0x94, 0x0c, 0xba, 0x84, 0x4b, 0x62, 0x49, 0x62, 0x50, 0x6a,
	0x71, 0x41, 0x7e, 0x5e, 0x71, 0xaa, 0x01, 0xa3, 0x93, 0x2a, 0x97, 0x72, 0x5e, 0x6a, 0x09, 0xb2,
	0x63, 0xa0, 0xce, 0x03, 0xb9, 0x47, 0x0f, 0xe6, 0xe8, 0x24, 0x36, 0xb0, 0x3b, 0x8c, 0x01, 0x01,
	0x00, 0x00, 0xff, 0xff, 0xf1, 0xb8, 0xd6, 0x43, 0xfb, 0x00, 0x00, 0x00,
}
