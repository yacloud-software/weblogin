// Code generated by protoc-gen-go.
// source: golang.conradwood.net/apis/location/location.proto
// DO NOT EDIT!

/*
Package location is a generated protocol buffer package.

It is generated from these files:
	golang.conradwood.net/apis/location/location.proto

It has these top-level messages:
	Location
	GetLocationRequest
	GetLocationResponse
	CreateLocationRequest
	CreateLocationResponse
	EditLocationDetailsRequest
	UpdateAddressLineRequest
	UpdateCityRequest
	UpdatePostcodeRequest
	UpdateCountryRequest
*/
package location

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import common "golang.conradwood.net/apis/common"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Location struct {
	LocationID   uint32 `protobuf:"varint,1,opt,name=LocationID" json:"LocationID,omitempty"`
	AddressLine1 string `protobuf:"bytes,2,opt,name=AddressLine1" json:"AddressLine1,omitempty"`
	AddressLine2 string `protobuf:"bytes,3,opt,name=AddressLine2" json:"AddressLine2,omitempty"`
	City         string `protobuf:"bytes,4,opt,name=City" json:"City,omitempty"`
	Postcode     string `protobuf:"bytes,5,opt,name=Postcode" json:"Postcode,omitempty"`
	Country      string `protobuf:"bytes,6,opt,name=Country" json:"Country,omitempty"`
}

func (m *Location) Reset()                    { *m = Location{} }
func (m *Location) String() string            { return proto.CompactTextString(m) }
func (*Location) ProtoMessage()               {}
func (*Location) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Location) GetLocationID() uint32 {
	if m != nil {
		return m.LocationID
	}
	return 0
}

func (m *Location) GetAddressLine1() string {
	if m != nil {
		return m.AddressLine1
	}
	return ""
}

func (m *Location) GetAddressLine2() string {
	if m != nil {
		return m.AddressLine2
	}
	return ""
}

func (m *Location) GetCity() string {
	if m != nil {
		return m.City
	}
	return ""
}

func (m *Location) GetPostcode() string {
	if m != nil {
		return m.Postcode
	}
	return ""
}

func (m *Location) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

type GetLocationRequest struct {
	LocationID uint32 `protobuf:"varint,1,opt,name=LocationID" json:"LocationID,omitempty"`
}

func (m *GetLocationRequest) Reset()                    { *m = GetLocationRequest{} }
func (m *GetLocationRequest) String() string            { return proto.CompactTextString(m) }
func (*GetLocationRequest) ProtoMessage()               {}
func (*GetLocationRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *GetLocationRequest) GetLocationID() uint32 {
	if m != nil {
		return m.LocationID
	}
	return 0
}

type GetLocationResponse struct {
	Location *Location `protobuf:"bytes,1,opt,name=Location" json:"Location,omitempty"`
}

func (m *GetLocationResponse) Reset()                    { *m = GetLocationResponse{} }
func (m *GetLocationResponse) String() string            { return proto.CompactTextString(m) }
func (*GetLocationResponse) ProtoMessage()               {}
func (*GetLocationResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *GetLocationResponse) GetLocation() *Location {
	if m != nil {
		return m.Location
	}
	return nil
}

type CreateLocationRequest struct {
	Location *Location `protobuf:"bytes,1,opt,name=Location" json:"Location,omitempty"`
}

func (m *CreateLocationRequest) Reset()                    { *m = CreateLocationRequest{} }
func (m *CreateLocationRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateLocationRequest) ProtoMessage()               {}
func (*CreateLocationRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *CreateLocationRequest) GetLocation() *Location {
	if m != nil {
		return m.Location
	}
	return nil
}

type CreateLocationResponse struct {
	LocationID uint32 `protobuf:"varint,1,opt,name=LocationID" json:"LocationID,omitempty"`
}

func (m *CreateLocationResponse) Reset()                    { *m = CreateLocationResponse{} }
func (m *CreateLocationResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateLocationResponse) ProtoMessage()               {}
func (*CreateLocationResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *CreateLocationResponse) GetLocationID() uint32 {
	if m != nil {
		return m.LocationID
	}
	return 0
}

type EditLocationDetailsRequest struct {
	Location *Location `protobuf:"bytes,1,opt,name=Location" json:"Location,omitempty"`
}

func (m *EditLocationDetailsRequest) Reset()                    { *m = EditLocationDetailsRequest{} }
func (m *EditLocationDetailsRequest) String() string            { return proto.CompactTextString(m) }
func (*EditLocationDetailsRequest) ProtoMessage()               {}
func (*EditLocationDetailsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *EditLocationDetailsRequest) GetLocation() *Location {
	if m != nil {
		return m.Location
	}
	return nil
}

type UpdateAddressLineRequest struct {
	LocationID  uint32 `protobuf:"varint,1,opt,name=LocationID" json:"LocationID,omitempty"`
	AddressLine string `protobuf:"bytes,2,opt,name=AddressLine" json:"AddressLine,omitempty"`
}

func (m *UpdateAddressLineRequest) Reset()                    { *m = UpdateAddressLineRequest{} }
func (m *UpdateAddressLineRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateAddressLineRequest) ProtoMessage()               {}
func (*UpdateAddressLineRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *UpdateAddressLineRequest) GetLocationID() uint32 {
	if m != nil {
		return m.LocationID
	}
	return 0
}

func (m *UpdateAddressLineRequest) GetAddressLine() string {
	if m != nil {
		return m.AddressLine
	}
	return ""
}

type UpdateCityRequest struct {
	LocationID uint32 `protobuf:"varint,1,opt,name=LocationID" json:"LocationID,omitempty"`
	City       string `protobuf:"bytes,2,opt,name=City" json:"City,omitempty"`
}

func (m *UpdateCityRequest) Reset()                    { *m = UpdateCityRequest{} }
func (m *UpdateCityRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateCityRequest) ProtoMessage()               {}
func (*UpdateCityRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *UpdateCityRequest) GetLocationID() uint32 {
	if m != nil {
		return m.LocationID
	}
	return 0
}

func (m *UpdateCityRequest) GetCity() string {
	if m != nil {
		return m.City
	}
	return ""
}

type UpdatePostcodeRequest struct {
	LocationID uint32 `protobuf:"varint,1,opt,name=LocationID" json:"LocationID,omitempty"`
	Postcode   string `protobuf:"bytes,2,opt,name=Postcode" json:"Postcode,omitempty"`
}

func (m *UpdatePostcodeRequest) Reset()                    { *m = UpdatePostcodeRequest{} }
func (m *UpdatePostcodeRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdatePostcodeRequest) ProtoMessage()               {}
func (*UpdatePostcodeRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *UpdatePostcodeRequest) GetLocationID() uint32 {
	if m != nil {
		return m.LocationID
	}
	return 0
}

func (m *UpdatePostcodeRequest) GetPostcode() string {
	if m != nil {
		return m.Postcode
	}
	return ""
}

type UpdateCountryRequest struct {
	LocationID uint32 `protobuf:"varint,1,opt,name=LocationID" json:"LocationID,omitempty"`
	Country    string `protobuf:"bytes,2,opt,name=Country" json:"Country,omitempty"`
}

func (m *UpdateCountryRequest) Reset()                    { *m = UpdateCountryRequest{} }
func (m *UpdateCountryRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateCountryRequest) ProtoMessage()               {}
func (*UpdateCountryRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *UpdateCountryRequest) GetLocationID() uint32 {
	if m != nil {
		return m.LocationID
	}
	return 0
}

func (m *UpdateCountryRequest) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

func init() {
	proto.RegisterType((*Location)(nil), "location.Location")
	proto.RegisterType((*GetLocationRequest)(nil), "location.GetLocationRequest")
	proto.RegisterType((*GetLocationResponse)(nil), "location.GetLocationResponse")
	proto.RegisterType((*CreateLocationRequest)(nil), "location.CreateLocationRequest")
	proto.RegisterType((*CreateLocationResponse)(nil), "location.CreateLocationResponse")
	proto.RegisterType((*EditLocationDetailsRequest)(nil), "location.EditLocationDetailsRequest")
	proto.RegisterType((*UpdateAddressLineRequest)(nil), "location.UpdateAddressLineRequest")
	proto.RegisterType((*UpdateCityRequest)(nil), "location.UpdateCityRequest")
	proto.RegisterType((*UpdatePostcodeRequest)(nil), "location.UpdatePostcodeRequest")
	proto.RegisterType((*UpdateCountryRequest)(nil), "location.UpdateCountryRequest")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for LocationService service

type LocationServiceClient interface {
	GetLocation(ctx context.Context, in *GetLocationRequest, opts ...grpc.CallOption) (*GetLocationResponse, error)
	CreateLocation(ctx context.Context, in *CreateLocationRequest, opts ...grpc.CallOption) (*CreateLocationResponse, error)
	EditLocation(ctx context.Context, in *EditLocationDetailsRequest, opts ...grpc.CallOption) (*common.Void, error)
	UpdateAddressLine1(ctx context.Context, in *UpdateAddressLineRequest, opts ...grpc.CallOption) (*common.Void, error)
	UpdateAddressLine2(ctx context.Context, in *UpdateAddressLineRequest, opts ...grpc.CallOption) (*common.Void, error)
	UpdateCity(ctx context.Context, in *UpdateCityRequest, opts ...grpc.CallOption) (*common.Void, error)
	UpdatePostcode(ctx context.Context, in *UpdatePostcodeRequest, opts ...grpc.CallOption) (*common.Void, error)
	UpdateCountry(ctx context.Context, in *UpdateCountryRequest, opts ...grpc.CallOption) (*common.Void, error)
}

type locationServiceClient struct {
	cc *grpc.ClientConn
}

func NewLocationServiceClient(cc *grpc.ClientConn) LocationServiceClient {
	return &locationServiceClient{cc}
}

func (c *locationServiceClient) GetLocation(ctx context.Context, in *GetLocationRequest, opts ...grpc.CallOption) (*GetLocationResponse, error) {
	out := new(GetLocationResponse)
	err := grpc.Invoke(ctx, "/location.LocationService/GetLocation", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *locationServiceClient) CreateLocation(ctx context.Context, in *CreateLocationRequest, opts ...grpc.CallOption) (*CreateLocationResponse, error) {
	out := new(CreateLocationResponse)
	err := grpc.Invoke(ctx, "/location.LocationService/CreateLocation", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *locationServiceClient) EditLocation(ctx context.Context, in *EditLocationDetailsRequest, opts ...grpc.CallOption) (*common.Void, error) {
	out := new(common.Void)
	err := grpc.Invoke(ctx, "/location.LocationService/EditLocation", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *locationServiceClient) UpdateAddressLine1(ctx context.Context, in *UpdateAddressLineRequest, opts ...grpc.CallOption) (*common.Void, error) {
	out := new(common.Void)
	err := grpc.Invoke(ctx, "/location.LocationService/UpdateAddressLine1", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *locationServiceClient) UpdateAddressLine2(ctx context.Context, in *UpdateAddressLineRequest, opts ...grpc.CallOption) (*common.Void, error) {
	out := new(common.Void)
	err := grpc.Invoke(ctx, "/location.LocationService/UpdateAddressLine2", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *locationServiceClient) UpdateCity(ctx context.Context, in *UpdateCityRequest, opts ...grpc.CallOption) (*common.Void, error) {
	out := new(common.Void)
	err := grpc.Invoke(ctx, "/location.LocationService/UpdateCity", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *locationServiceClient) UpdatePostcode(ctx context.Context, in *UpdatePostcodeRequest, opts ...grpc.CallOption) (*common.Void, error) {
	out := new(common.Void)
	err := grpc.Invoke(ctx, "/location.LocationService/UpdatePostcode", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *locationServiceClient) UpdateCountry(ctx context.Context, in *UpdateCountryRequest, opts ...grpc.CallOption) (*common.Void, error) {
	out := new(common.Void)
	err := grpc.Invoke(ctx, "/location.LocationService/UpdateCountry", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for LocationService service

type LocationServiceServer interface {
	GetLocation(context.Context, *GetLocationRequest) (*GetLocationResponse, error)
	CreateLocation(context.Context, *CreateLocationRequest) (*CreateLocationResponse, error)
	EditLocation(context.Context, *EditLocationDetailsRequest) (*common.Void, error)
	UpdateAddressLine1(context.Context, *UpdateAddressLineRequest) (*common.Void, error)
	UpdateAddressLine2(context.Context, *UpdateAddressLineRequest) (*common.Void, error)
	UpdateCity(context.Context, *UpdateCityRequest) (*common.Void, error)
	UpdatePostcode(context.Context, *UpdatePostcodeRequest) (*common.Void, error)
	UpdateCountry(context.Context, *UpdateCountryRequest) (*common.Void, error)
}

func RegisterLocationServiceServer(s *grpc.Server, srv LocationServiceServer) {
	s.RegisterService(&_LocationService_serviceDesc, srv)
}

func _LocationService_GetLocation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetLocationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LocationServiceServer).GetLocation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/location.LocationService/GetLocation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LocationServiceServer).GetLocation(ctx, req.(*GetLocationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LocationService_CreateLocation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateLocationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LocationServiceServer).CreateLocation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/location.LocationService/CreateLocation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LocationServiceServer).CreateLocation(ctx, req.(*CreateLocationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LocationService_EditLocation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EditLocationDetailsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LocationServiceServer).EditLocation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/location.LocationService/EditLocation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LocationServiceServer).EditLocation(ctx, req.(*EditLocationDetailsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LocationService_UpdateAddressLine1_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateAddressLineRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LocationServiceServer).UpdateAddressLine1(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/location.LocationService/UpdateAddressLine1",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LocationServiceServer).UpdateAddressLine1(ctx, req.(*UpdateAddressLineRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LocationService_UpdateAddressLine2_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateAddressLineRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LocationServiceServer).UpdateAddressLine2(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/location.LocationService/UpdateAddressLine2",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LocationServiceServer).UpdateAddressLine2(ctx, req.(*UpdateAddressLineRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LocationService_UpdateCity_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateCityRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LocationServiceServer).UpdateCity(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/location.LocationService/UpdateCity",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LocationServiceServer).UpdateCity(ctx, req.(*UpdateCityRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LocationService_UpdatePostcode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdatePostcodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LocationServiceServer).UpdatePostcode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/location.LocationService/UpdatePostcode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LocationServiceServer).UpdatePostcode(ctx, req.(*UpdatePostcodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LocationService_UpdateCountry_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateCountryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LocationServiceServer).UpdateCountry(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/location.LocationService/UpdateCountry",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LocationServiceServer).UpdateCountry(ctx, req.(*UpdateCountryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _LocationService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "location.LocationService",
	HandlerType: (*LocationServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetLocation",
			Handler:    _LocationService_GetLocation_Handler,
		},
		{
			MethodName: "CreateLocation",
			Handler:    _LocationService_CreateLocation_Handler,
		},
		{
			MethodName: "EditLocation",
			Handler:    _LocationService_EditLocation_Handler,
		},
		{
			MethodName: "UpdateAddressLine1",
			Handler:    _LocationService_UpdateAddressLine1_Handler,
		},
		{
			MethodName: "UpdateAddressLine2",
			Handler:    _LocationService_UpdateAddressLine2_Handler,
		},
		{
			MethodName: "UpdateCity",
			Handler:    _LocationService_UpdateCity_Handler,
		},
		{
			MethodName: "UpdatePostcode",
			Handler:    _LocationService_UpdatePostcode_Handler,
		},
		{
			MethodName: "UpdateCountry",
			Handler:    _LocationService_UpdateCountry_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "golang.conradwood.net/apis/location/location.proto",
}

func init() { proto.RegisterFile("golang.conradwood.net/apis/location/location.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 489 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x9c, 0x94, 0x51, 0x6f, 0xd3, 0x30,
	0x10, 0xc7, 0xd5, 0x52, 0x46, 0xb9, 0x76, 0x43, 0x1c, 0x0c, 0x59, 0x01, 0x46, 0x65, 0x40, 0xda,
	0x53, 0xa6, 0x05, 0x24, 0x78, 0x41, 0x88, 0x75, 0xa3, 0x02, 0xf5, 0x61, 0x6a, 0x05, 0x4f, 0xbc,
	0x84, 0xd8, 0x9a, 0x2c, 0x75, 0x76, 0x89, 0x3d, 0xd0, 0xbe, 0x1b, 0x12, 0x5f, 0x0d, 0x2d, 0x71,
	0x12, 0x3b, 0x59, 0x58, 0xe8, 0x53, 0xec, 0xf3, 0xfd, 0xff, 0x39, 0x9f, 0x7f, 0x3a, 0x88, 0xce,
	0xd4, 0x2a, 0x96, 0x67, 0x61, 0xa2, 0x64, 0x1a, 0xb3, 0x5f, 0x4a, 0xb1, 0x50, 0x72, 0x73, 0x10,
	0xaf, 0x85, 0x3e, 0x58, 0xa9, 0x24, 0x36, 0x42, 0xc9, 0x72, 0x11, 0xae, 0x53, 0x65, 0x14, 0x0e,
	0x8b, 0x7d, 0x10, 0xfe, 0x43, 0x9d, 0xa8, 0xf3, 0x73, 0x25, 0xed, 0x27, 0x57, 0xd2, 0xdf, 0x3d,
	0x18, 0xce, 0xad, 0x18, 0xf7, 0x00, 0x8a, 0xf5, 0xa7, 0x63, 0xd2, 0x9b, 0xf4, 0xf6, 0xb7, 0x17,
	0x4e, 0x04, 0x29, 0x8c, 0x3f, 0x30, 0x96, 0x72, 0xad, 0xe7, 0x42, 0xf2, 0x43, 0xd2, 0x9f, 0xf4,
	0xf6, 0xef, 0x2e, 0xbc, 0x58, 0x2d, 0x27, 0x22, 0xb7, 0x1a, 0x39, 0x11, 0x22, 0x0c, 0xa6, 0xc2,
	0x5c, 0x92, 0x41, 0x76, 0x96, 0xad, 0x31, 0x80, 0xe1, 0xa9, 0xd2, 0x26, 0x51, 0x8c, 0x93, 0xdb,
	0x59, 0xbc, 0xdc, 0x23, 0x81, 0x3b, 0x53, 0x75, 0x21, 0x4d, 0x7a, 0x49, 0xb6, 0xb2, 0xa3, 0x62,
	0x4b, 0x5f, 0x03, 0xce, 0xb8, 0x29, 0x4a, 0x5c, 0xf0, 0x1f, 0x17, 0x5c, 0x9b, 0x9b, 0xee, 0x41,
	0x4f, 0xe0, 0x81, 0xa7, 0xd2, 0x6b, 0x25, 0x35, 0xc7, 0xb0, 0x6a, 0x45, 0x26, 0x1a, 0x45, 0x18,
	0x96, 0x8d, 0x2e, 0xb3, 0xcb, 0x1c, 0x3a, 0x83, 0xdd, 0x69, 0xca, 0x63, 0xc3, 0xeb, 0xff, 0xff,
	0x5f, 0xa3, 0xb7, 0xf0, 0xa8, 0x6e, 0x64, 0x4b, 0xba, 0xe9, 0x26, 0x73, 0x08, 0x4e, 0x98, 0x28,
	0xaf, 0x72, 0xcc, 0x4d, 0x2c, 0x56, 0x7a, 0xd3, 0x3a, 0xbe, 0x01, 0xf9, 0xb2, 0x66, 0xb1, 0xe1,
	0xce, 0x6b, 0x75, 0xec, 0x29, 0x4e, 0x60, 0xe4, 0xa8, 0x2c, 0x1a, 0x6e, 0x88, 0xce, 0xe0, 0x7e,
	0xee, 0x7e, 0xf5, 0xde, 0x5d, 0x6d, 0x0b, 0x54, 0xfa, 0x15, 0x2a, 0x74, 0x09, 0xbb, 0xb9, 0x51,
	0x01, 0x48, 0x57, 0x33, 0x97, 0xb1, 0xbe, 0xcf, 0x18, 0x3d, 0x85, 0x87, 0xb6, 0xba, 0x1c, 0xad,
	0xae, 0x9e, 0x0e, 0x9b, 0x7d, 0x8f, 0xcd, 0xe8, 0xcf, 0x00, 0xee, 0x15, 0x89, 0x4b, 0x9e, 0xfe,
	0x14, 0x09, 0xc7, 0xcf, 0x30, 0x72, 0xc8, 0xc3, 0x27, 0xd5, 0x73, 0x34, 0x31, 0x0e, 0x9e, 0xb6,
	0x9c, 0x5a, 0x36, 0x96, 0xb0, 0xe3, 0x53, 0x83, 0xcf, 0x2a, 0xc1, 0xb5, 0x60, 0x06, 0x93, 0xf6,
	0x04, 0x6b, 0x7a, 0x04, 0x63, 0x17, 0x28, 0x7c, 0x51, 0x29, 0xda, 0x41, 0x0b, 0xc6, 0xa1, 0x1d,
	0x2a, 0x5f, 0x95, 0x60, 0xf8, 0x11, 0xb0, 0x81, 0xd1, 0x21, 0xd2, 0xca, 0xa9, 0x0d, 0xb2, 0x0e,
	0x3e, 0xd1, 0x06, 0x3e, 0x6f, 0x00, 0x2a, 0xf0, 0xf0, 0x71, 0x5d, 0xef, 0xe0, 0x58, 0x13, 0xbe,
	0x87, 0x1d, 0x1f, 0x34, 0xb7, 0xc3, 0xd7, 0x22, 0x58, 0x33, 0x78, 0x07, 0xdb, 0x1e, 0x54, 0xb8,
	0xd7, 0xf8, 0xb9, 0x47, 0x9b, 0x2f, 0x3f, 0x7a, 0x09, 0xcf, 0x25, 0x37, 0xee, 0x2c, 0xb7, 0xd3,
	0xfd, 0x6a, 0x9c, 0x97, 0x4e, 0xdf, 0xb7, 0xb2, 0x51, 0xfe, 0xea, 0x6f, 0x00, 0x00, 0x00, 0xff,
	0xff, 0xae, 0x69, 0x21, 0xf6, 0x3a, 0x06, 0x00, 0x00,
}
