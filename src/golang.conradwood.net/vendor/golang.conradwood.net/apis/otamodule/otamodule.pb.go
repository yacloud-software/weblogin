// Code generated by protoc-gen-go.
// source: golang.conradwood.net/apis/otamodule/otamodule.proto
// DO NOT EDIT!

/*
Package otamodule is a generated protocol buffer package.

It is generated from these files:
	golang.conradwood.net/apis/otamodule/otamodule.proto

It has these top-level messages:
	HubVersion
*/
package otamodule

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import buildrepo "golang.conradwood.net/apis/buildrepo"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// https://docs.google.com/document/d/1M4WoF-eabUcpitIQu1loro39BNL8fo2aZhZHSk9UGhU/edit#
type HubVersion struct {
	Number uint32 `protobuf:"varint,1,opt,name=Number" json:"Number,omitempty"`
}

func (m *HubVersion) Reset()                    { *m = HubVersion{} }
func (m *HubVersion) String() string            { return proto.CompactTextString(m) }
func (*HubVersion) ProtoMessage()               {}
func (*HubVersion) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *HubVersion) GetNumber() uint32 {
	if m != nil {
		return m.Number
	}
	return 0
}

func init() {
	proto.RegisterType((*HubVersion)(nil), "otamodule.HubVersion")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for OTAModule service

type OTAModuleClient interface {
	ConvertBuildIDToHubVersion(ctx context.Context, in *buildrepo.BuildNumber, opts ...grpc.CallOption) (*HubVersion, error)
	ConvertHubVersionToBuildID(ctx context.Context, in *HubVersion, opts ...grpc.CallOption) (*buildrepo.BuildNumber, error)
}

type oTAModuleClient struct {
	cc *grpc.ClientConn
}

func NewOTAModuleClient(cc *grpc.ClientConn) OTAModuleClient {
	return &oTAModuleClient{cc}
}

func (c *oTAModuleClient) ConvertBuildIDToHubVersion(ctx context.Context, in *buildrepo.BuildNumber, opts ...grpc.CallOption) (*HubVersion, error) {
	out := new(HubVersion)
	err := grpc.Invoke(ctx, "/otamodule.OTAModule/ConvertBuildIDToHubVersion", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *oTAModuleClient) ConvertHubVersionToBuildID(ctx context.Context, in *HubVersion, opts ...grpc.CallOption) (*buildrepo.BuildNumber, error) {
	out := new(buildrepo.BuildNumber)
	err := grpc.Invoke(ctx, "/otamodule.OTAModule/ConvertHubVersionToBuildID", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for OTAModule service

type OTAModuleServer interface {
	ConvertBuildIDToHubVersion(context.Context, *buildrepo.BuildNumber) (*HubVersion, error)
	ConvertHubVersionToBuildID(context.Context, *HubVersion) (*buildrepo.BuildNumber, error)
}

func RegisterOTAModuleServer(s *grpc.Server, srv OTAModuleServer) {
	s.RegisterService(&_OTAModule_serviceDesc, srv)
}

func _OTAModule_ConvertBuildIDToHubVersion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(buildrepo.BuildNumber)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OTAModuleServer).ConvertBuildIDToHubVersion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/otamodule.OTAModule/ConvertBuildIDToHubVersion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OTAModuleServer).ConvertBuildIDToHubVersion(ctx, req.(*buildrepo.BuildNumber))
	}
	return interceptor(ctx, in, info, handler)
}

func _OTAModule_ConvertHubVersionToBuildID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HubVersion)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OTAModuleServer).ConvertHubVersionToBuildID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/otamodule.OTAModule/ConvertHubVersionToBuildID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OTAModuleServer).ConvertHubVersionToBuildID(ctx, req.(*HubVersion))
	}
	return interceptor(ctx, in, info, handler)
}

var _OTAModule_serviceDesc = grpc.ServiceDesc{
	ServiceName: "otamodule.OTAModule",
	HandlerType: (*OTAModuleServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ConvertBuildIDToHubVersion",
			Handler:    _OTAModule_ConvertBuildIDToHubVersion_Handler,
		},
		{
			MethodName: "ConvertHubVersionToBuildID",
			Handler:    _OTAModule_ConvertHubVersionToBuildID_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "golang.conradwood.net/apis/otamodule/otamodule.proto",
}

func init() {
	proto.RegisterFile("golang.conradwood.net/apis/otamodule/otamodule.proto", fileDescriptor0)
}

var fileDescriptor0 = []byte{
	// 205 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0x32, 0x49, 0xcf, 0xcf, 0x49,
	0xcc, 0x4b, 0xd7, 0x4b, 0xce, 0xcf, 0x2b, 0x4a, 0x4c, 0x29, 0xcf, 0xcf, 0x4f, 0xd1, 0xcb, 0x4b,
	0x2d, 0xd1, 0x4f, 0x2c, 0xc8, 0x2c, 0xd6, 0xcf, 0x2f, 0x49, 0xcc, 0xcd, 0x4f, 0x29, 0xcd, 0x49,
	0x45, 0xb0, 0xf4, 0x0a, 0x8a, 0xf2, 0x4b, 0xf2, 0x85, 0x38, 0xe1, 0x02, 0x52, 0xf8, 0x0c, 0x48,
	0x2a, 0xcd, 0xcc, 0x49, 0x29, 0x4a, 0x2d, 0xc8, 0x47, 0xb0, 0x20, 0x06, 0x28, 0xa9, 0x70, 0x71,
	0x79, 0x94, 0x26, 0x85, 0xa5, 0x16, 0x15, 0x67, 0xe6, 0xe7, 0x09, 0x89, 0x71, 0xb1, 0xf9, 0x95,
	0xe6, 0x26, 0xa5, 0x16, 0x49, 0x30, 0x2a, 0x30, 0x6a, 0xf0, 0x06, 0x41, 0x79, 0x46, 0x4b, 0x19,
	0xb9, 0x38, 0xfd, 0x43, 0x1c, 0x7d, 0xc1, 0x36, 0x09, 0x79, 0x73, 0x49, 0x39, 0xe7, 0xe7, 0x95,
	0xa5, 0x16, 0x95, 0x38, 0x81, 0x4c, 0xf3, 0x74, 0x09, 0xc9, 0x47, 0x36, 0x43, 0x0f, 0x61, 0x07,
	0x58, 0x1e, 0x62, 0x86, 0x94, 0xa8, 0x1e, 0xc2, 0xf1, 0x48, 0xca, 0x11, 0x86, 0x21, 0x04, 0x43,
	0xf2, 0xa1, 0x06, 0x0b, 0x61, 0xd7, 0x24, 0x85, 0xc3, 0x0e, 0x27, 0x35, 0x2e, 0x95, 0xbc, 0xd4,
	0x12, 0xe4, 0x20, 0x80, 0x06, 0x0a, 0x28, 0x14, 0x10, 0x46, 0x25, 0xb1, 0x81, 0x3d, 0x6f, 0x0c,
	0x08, 0x00, 0x00, 0xff, 0xff, 0x82, 0xe0, 0x07, 0xb9, 0x75, 0x01, 0x00, 0x00,
}
