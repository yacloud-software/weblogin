// Code generated by protoc-gen-go.
// source: golang.conradwood.net/apis/workshop_1/workshop_1.proto
// DO NOT EDIT!

/*
Package workshop_1 is a generated protocol buffer package.

It is generated from these files:
	golang.conradwood.net/apis/workshop_1/workshop_1.proto

It has these top-level messages:
	Request
	Response
	PutRequest
	GetRequest
	GetResponse
*/
package workshop_1

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import common "golang.conradwood.net/apis/common"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Request struct {
	Number1 uint32 `protobuf:"varint,1,opt,name=Number1" json:"Number1,omitempty"`
	Number2 uint32 `protobuf:"varint,2,opt,name=Number2" json:"Number2,omitempty"`
}

func (m *Request) Reset()                    { *m = Request{} }
func (m *Request) String() string            { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()               {}
func (*Request) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Request) GetNumber1() uint32 {
	if m != nil {
		return m.Number1
	}
	return 0
}

func (m *Request) GetNumber2() uint32 {
	if m != nil {
		return m.Number2
	}
	return 0
}

type Response struct {
	Result uint32 `protobuf:"varint,1,opt,name=Result" json:"Result,omitempty"`
}

func (m *Response) Reset()                    { *m = Response{} }
func (m *Response) String() string            { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()               {}
func (*Response) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Response) GetResult() uint32 {
	if m != nil {
		return m.Result
	}
	return 0
}

type PutRequest struct {
	Key   string `protobuf:"bytes,1,opt,name=Key" json:"Key,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=Value" json:"Value,omitempty"`
}

func (m *PutRequest) Reset()                    { *m = PutRequest{} }
func (m *PutRequest) String() string            { return proto.CompactTextString(m) }
func (*PutRequest) ProtoMessage()               {}
func (*PutRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *PutRequest) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *PutRequest) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type GetRequest struct {
	Key string `protobuf:"bytes,1,opt,name=Key" json:"Key,omitempty"`
}

func (m *GetRequest) Reset()                    { *m = GetRequest{} }
func (m *GetRequest) String() string            { return proto.CompactTextString(m) }
func (*GetRequest) ProtoMessage()               {}
func (*GetRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *GetRequest) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

type GetResponse struct {
	Key   string `protobuf:"bytes,1,opt,name=Key" json:"Key,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=Value" json:"Value,omitempty"`
}

func (m *GetResponse) Reset()                    { *m = GetResponse{} }
func (m *GetResponse) String() string            { return proto.CompactTextString(m) }
func (*GetResponse) ProtoMessage()               {}
func (*GetResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *GetResponse) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *GetResponse) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func init() {
	proto.RegisterType((*Request)(nil), "workshop_1.Request")
	proto.RegisterType((*Response)(nil), "workshop_1.Response")
	proto.RegisterType((*PutRequest)(nil), "workshop_1.PutRequest")
	proto.RegisterType((*GetRequest)(nil), "workshop_1.GetRequest")
	proto.RegisterType((*GetResponse)(nil), "workshop_1.GetResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Workshop1Service service

type Workshop1ServiceClient interface {
	Add(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
}

type workshop1ServiceClient struct {
	cc *grpc.ClientConn
}

func NewWorkshop1ServiceClient(cc *grpc.ClientConn) Workshop1ServiceClient {
	return &workshop1ServiceClient{cc}
}

func (c *workshop1ServiceClient) Add(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := grpc.Invoke(ctx, "/workshop_1.Workshop1Service/Add", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Workshop1Service service

type Workshop1ServiceServer interface {
	Add(context.Context, *Request) (*Response, error)
}

func RegisterWorkshop1ServiceServer(s *grpc.Server, srv Workshop1ServiceServer) {
	s.RegisterService(&_Workshop1Service_serviceDesc, srv)
}

func _Workshop1Service_Add_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Workshop1ServiceServer).Add(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/workshop_1.Workshop1Service/Add",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Workshop1ServiceServer).Add(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

var _Workshop1Service_serviceDesc = grpc.ServiceDesc{
	ServiceName: "workshop_1.Workshop1Service",
	HandlerType: (*Workshop1ServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Add",
			Handler:    _Workshop1Service_Add_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "golang.conradwood.net/apis/workshop_1/workshop_1.proto",
}

// Client API for Workshop1SQLService service

type Workshop1SQLServiceClient interface {
	// This stores a value in our database
	Put(ctx context.Context, in *PutRequest, opts ...grpc.CallOption) (*common.Void, error)
	// this retrieves a value from our database
	Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*GetResponse, error)
}

type workshop1SQLServiceClient struct {
	cc *grpc.ClientConn
}

func NewWorkshop1SQLServiceClient(cc *grpc.ClientConn) Workshop1SQLServiceClient {
	return &workshop1SQLServiceClient{cc}
}

func (c *workshop1SQLServiceClient) Put(ctx context.Context, in *PutRequest, opts ...grpc.CallOption) (*common.Void, error) {
	out := new(common.Void)
	err := grpc.Invoke(ctx, "/workshop_1.Workshop1SQLService/Put", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *workshop1SQLServiceClient) Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*GetResponse, error) {
	out := new(GetResponse)
	err := grpc.Invoke(ctx, "/workshop_1.Workshop1SQLService/Get", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Workshop1SQLService service

type Workshop1SQLServiceServer interface {
	// This stores a value in our database
	Put(context.Context, *PutRequest) (*common.Void, error)
	// this retrieves a value from our database
	Get(context.Context, *GetRequest) (*GetResponse, error)
}

func RegisterWorkshop1SQLServiceServer(s *grpc.Server, srv Workshop1SQLServiceServer) {
	s.RegisterService(&_Workshop1SQLService_serviceDesc, srv)
}

func _Workshop1SQLService_Put_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PutRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Workshop1SQLServiceServer).Put(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/workshop_1.Workshop1SQLService/Put",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Workshop1SQLServiceServer).Put(ctx, req.(*PutRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Workshop1SQLService_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Workshop1SQLServiceServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/workshop_1.Workshop1SQLService/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Workshop1SQLServiceServer).Get(ctx, req.(*GetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Workshop1SQLService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "workshop_1.Workshop1SQLService",
	HandlerType: (*Workshop1SQLServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Put",
			Handler:    _Workshop1SQLService_Put_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _Workshop1SQLService_Get_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "golang.conradwood.net/apis/workshop_1/workshop_1.proto",
}

func init() {
	proto.RegisterFile("golang.conradwood.net/apis/workshop_1/workshop_1.proto", fileDescriptor0)
}

var fileDescriptor0 = []byte{
	// 306 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x8c, 0x51, 0xdf, 0x4b, 0x32, 0x41,
	0x14, 0xc5, 0x6f, 0xf9, 0x34, 0x6f, 0x05, 0x32, 0x8a, 0xc9, 0x3e, 0x44, 0x0c, 0x44, 0x41, 0x30,
	0xe6, 0x56, 0xbe, 0xf5, 0x50, 0x04, 0x3e, 0x14, 0x61, 0x13, 0xd8, 0x63, 0xac, 0xee, 0xc5, 0x24,
	0x9d, 0xbb, 0xed, 0xcc, 0x24, 0xf5, 0xd7, 0x87, 0xbb, 0x23, 0x3b, 0x15, 0x45, 0x4f, 0x33, 0xf7,
	0xc7, 0x39, 0x87, 0x7b, 0x0e, 0xf4, 0xa7, 0x34, 0x8f, 0xd5, 0x54, 0x4c, 0x48, 0x65, 0x71, 0xb2,
	0x24, 0x4a, 0x84, 0x42, 0xd3, 0x8d, 0xd3, 0x99, 0xee, 0x2e, 0x29, 0x7b, 0xd6, 0x4f, 0x94, 0x3e,
	0xf6, 0xbc, 0xaf, 0x48, 0x33, 0x32, 0xc4, 0xa0, 0xec, 0x84, 0xe2, 0x17, 0x8e, 0x09, 0x2d, 0x16,
	0xa4, 0xdc, 0x53, 0x60, 0xf9, 0x39, 0xd4, 0x24, 0xbe, 0x58, 0xd4, 0x86, 0x75, 0xa0, 0x76, 0x6b,
	0x17, 0x63, 0xcc, 0x7a, 0x9d, 0xca, 0x5e, 0xe5, 0x70, 0x5b, 0xae, 0xcb, 0x72, 0x12, 0x75, 0xfe,
	0xf9, 0x93, 0x88, 0x73, 0xd8, 0x90, 0xa8, 0x53, 0x52, 0x1a, 0x59, 0x1b, 0xaa, 0x12, 0xb5, 0x9d,
	0x1b, 0x07, 0x77, 0x15, 0x3f, 0x05, 0x18, 0x5a, 0xb3, 0x56, 0x69, 0x40, 0x70, 0x8d, 0x6f, 0xf9,
	0x4a, 0x5d, 0xae, 0xbe, 0xac, 0x05, 0xff, 0x47, 0xf1, 0xdc, 0x62, 0xce, 0x5d, 0x97, 0x45, 0xc1,
	0x77, 0x01, 0x06, 0xf8, 0x33, 0x8a, 0x9f, 0xc1, 0x66, 0x3e, 0x77, 0xe2, 0x7f, 0xa4, 0x8d, 0xae,
	0xa0, 0xf1, 0xe0, 0xdc, 0xea, 0xdd, 0x63, 0xf6, 0x3a, 0x9b, 0x20, 0x3b, 0x86, 0xe0, 0x22, 0x49,
	0x58, 0x53, 0x78, 0xce, 0x3a, 0xe1, 0xb0, 0xf5, 0xb9, 0x59, 0xa8, 0x45, 0xef, 0xd0, 0x2c, 0x59,
	0xee, 0x6e, 0xd6, 0x44, 0x47, 0x10, 0x0c, 0xad, 0x61, 0x6d, 0x1f, 0x53, 0x9e, 0x1e, 0x6e, 0x09,
	0x67, 0xfd, 0x88, 0x66, 0x09, 0xeb, 0x43, 0x30, 0xc0, 0x2f, 0xcb, 0xe5, 0xc5, 0xe1, 0xce, 0xb7,
	0x7e, 0xa1, 0x7d, 0x79, 0x00, 0xfb, 0x0a, 0x8d, 0x1f, 0xb0, 0x8b, 0x7c, 0x95, 0xb1, 0x07, 0x1a,
	0x57, 0xf3, 0x84, 0x4f, 0x3e, 0x02, 0x00, 0x00, 0xff, 0xff, 0xf3, 0xff, 0x54, 0xf2, 0x57, 0x02,
	0x00, 0x00,
}
