// Code generated by protoc-gen-go.
// source: golang.conradwood.net/apis/callgraph/callgraph.proto
// DO NOT EDIT!

/*
Package callgraph is a generated protocol buffer package.

It is generated from these files:
	golang.conradwood.net/apis/callgraph/callgraph.proto

It has these top-level messages:
	Service
	CallGraphResponse
*/
package callgraph

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import common "golang.conradwood.net/apis/common"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Service struct {
	ServiceName  string   `protobuf:"bytes,1,opt,name=ServiceName" json:"ServiceName,omitempty"`
	Dependencies []string `protobuf:"bytes,2,rep,name=Dependencies" json:"Dependencies,omitempty"`
}

func (m *Service) Reset()                    { *m = Service{} }
func (m *Service) String() string            { return proto.CompactTextString(m) }
func (*Service) ProtoMessage()               {}
func (*Service) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Service) GetServiceName() string {
	if m != nil {
		return m.ServiceName
	}
	return ""
}

func (m *Service) GetDependencies() []string {
	if m != nil {
		return m.Dependencies
	}
	return nil
}

type CallGraphResponse struct {
	Services []*Service `protobuf:"bytes,1,rep,name=Services" json:"Services,omitempty"`
}

func (m *CallGraphResponse) Reset()                    { *m = CallGraphResponse{} }
func (m *CallGraphResponse) String() string            { return proto.CompactTextString(m) }
func (*CallGraphResponse) ProtoMessage()               {}
func (*CallGraphResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *CallGraphResponse) GetServices() []*Service {
	if m != nil {
		return m.Services
	}
	return nil
}

func init() {
	proto.RegisterType((*Service)(nil), "callgraph.Service")
	proto.RegisterType((*CallGraphResponse)(nil), "callgraph.CallGraphResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for CallGraphService service

type CallGraphServiceClient interface {
	GetDependencies(ctx context.Context, in *common.Void, opts ...grpc.CallOption) (*CallGraphResponse, error)
}

type callGraphServiceClient struct {
	cc *grpc.ClientConn
}

func NewCallGraphServiceClient(cc *grpc.ClientConn) CallGraphServiceClient {
	return &callGraphServiceClient{cc}
}

func (c *callGraphServiceClient) GetDependencies(ctx context.Context, in *common.Void, opts ...grpc.CallOption) (*CallGraphResponse, error) {
	out := new(CallGraphResponse)
	err := grpc.Invoke(ctx, "/callgraph.CallGraphService/GetDependencies", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for CallGraphService service

type CallGraphServiceServer interface {
	GetDependencies(context.Context, *common.Void) (*CallGraphResponse, error)
}

func RegisterCallGraphServiceServer(s *grpc.Server, srv CallGraphServiceServer) {
	s.RegisterService(&_CallGraphService_serviceDesc, srv)
}

func _CallGraphService_GetDependencies_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(common.Void)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CallGraphServiceServer).GetDependencies(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/callgraph.CallGraphService/GetDependencies",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CallGraphServiceServer).GetDependencies(ctx, req.(*common.Void))
	}
	return interceptor(ctx, in, info, handler)
}

var _CallGraphService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "callgraph.CallGraphService",
	HandlerType: (*CallGraphServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetDependencies",
			Handler:    _CallGraphService_GetDependencies_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "golang.conradwood.net/apis/callgraph/callgraph.proto",
}

func init() {
	proto.RegisterFile("golang.conradwood.net/apis/callgraph/callgraph.proto", fileDescriptor0)
}

var fileDescriptor0 = []byte{
	// 234 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x7c, 0x90, 0x41, 0x4b, 0xc4, 0x30,
	0x10, 0x85, 0xa9, 0x0b, 0x6a, 0x67, 0x17, 0xd4, 0x9c, 0xca, 0xe2, 0xa1, 0x14, 0x91, 0x9e, 0xb2,
	0xb0, 0x7a, 0xf5, 0xe2, 0x0a, 0x7b, 0x53, 0xac, 0xe0, 0x3d, 0xb6, 0x43, 0x0d, 0xa4, 0x33, 0x21,
	0x09, 0xfa, 0xf7, 0xa5, 0x1a, 0xdb, 0x88, 0xb0, 0xa7, 0x0c, 0x2f, 0x99, 0x97, 0xf7, 0x3e, 0xb8,
	0xed, 0xd9, 0x28, 0xea, 0x65, 0xcb, 0xe4, 0x54, 0xf7, 0xc9, 0xdc, 0x49, 0xc2, 0xb0, 0x51, 0x56,
	0xfb, 0x4d, 0xab, 0x8c, 0xe9, 0x9d, 0xb2, 0xef, 0xf3, 0x24, 0xad, 0xe3, 0xc0, 0x22, 0x9f, 0x84,
	0xb5, 0x3c, 0x64, 0xc0, 0xc3, 0xc0, 0x14, 0x8f, 0x9f, 0xd5, 0xea, 0x09, 0x4e, 0x5e, 0xd0, 0x7d,
	0xe8, 0x16, 0x45, 0x09, 0xcb, 0x38, 0x3e, 0xaa, 0x01, 0x8b, 0xac, 0xcc, 0xea, 0xbc, 0x49, 0x25,
	0x51, 0xc1, 0xea, 0x01, 0x2d, 0x52, 0x87, 0xd4, 0x6a, 0xf4, 0xc5, 0x51, 0xb9, 0xa8, 0xf3, 0xe6,
	0x8f, 0x56, 0xed, 0xe0, 0x62, 0xa7, 0x8c, 0xd9, 0x8f, 0x69, 0x1a, 0xf4, 0x96, 0xc9, 0xa3, 0x90,
	0x70, 0x1a, 0x7d, 0x7c, 0x91, 0x95, 0x8b, 0x7a, 0xb9, 0x15, 0x72, 0x2e, 0x11, 0xaf, 0x9a, 0xe9,
	0xcd, 0xf6, 0x19, 0xce, 0x27, 0x93, 0xdf, 0x78, 0x77, 0x70, 0xb6, 0xc7, 0x90, 0xfe, 0x25, 0x56,
	0x32, 0x76, 0x79, 0x65, 0xdd, 0xad, 0x2f, 0x13, 0xcb, 0x7f, 0x11, 0xee, 0xaf, 0xe1, 0x8a, 0x30,
	0xa4, 0x5c, 0x22, 0xa9, 0x11, 0xcd, 0xbc, 0xf9, 0x76, 0xfc, 0xcd, 0xe5, 0xe6, 0x2b, 0x00, 0x00,
	0xff, 0xff, 0xa7, 0x82, 0x3b, 0xe1, 0x8a, 0x01, 0x00, 0x00,
}
