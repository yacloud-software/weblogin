// Code generated by protoc-gen-go.
// source: golang.conradwood.net/apis/alerter/alerter.proto
// DO NOT EDIT!

/*
Package alerter is a generated protocol buffer package.

It is generated from these files:
	golang.conradwood.net/apis/alerter/alerter.proto

It has these top-level messages:
	OverrideRequest
	AlertResponse
*/
package alerter

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import common "golang.conradwood.net/apis/common"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type OverrideRequest struct {
	Message string `protobuf:"bytes,1,opt,name=Message" json:"Message,omitempty"`
	Timeout uint32 `protobuf:"varint,2,opt,name=Timeout" json:"Timeout,omitempty"`
}

func (m *OverrideRequest) Reset()                    { *m = OverrideRequest{} }
func (m *OverrideRequest) String() string            { return proto.CompactTextString(m) }
func (*OverrideRequest) ProtoMessage()               {}
func (*OverrideRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *OverrideRequest) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *OverrideRequest) GetTimeout() uint32 {
	if m != nil {
		return m.Timeout
	}
	return 0
}

type AlertResponse struct {
	Status     string   `protobuf:"bytes,1,opt,name=Status" json:"Status,omitempty"`
	StatusList []string `protobuf:"bytes,2,rep,name=StatusList" json:"StatusList,omitempty"`
}

func (m *AlertResponse) Reset()                    { *m = AlertResponse{} }
func (m *AlertResponse) String() string            { return proto.CompactTextString(m) }
func (*AlertResponse) ProtoMessage()               {}
func (*AlertResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *AlertResponse) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *AlertResponse) GetStatusList() []string {
	if m != nil {
		return m.StatusList
	}
	return nil
}

func init() {
	proto.RegisterType((*OverrideRequest)(nil), "alerter.OverrideRequest")
	proto.RegisterType((*AlertResponse)(nil), "alerter.AlertResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for AlerterService service

type AlerterServiceClient interface {
	Override(ctx context.Context, in *OverrideRequest, opts ...grpc.CallOption) (*common.Void, error)
	GetCurrentAlertType(ctx context.Context, in *common.Void, opts ...grpc.CallOption) (*AlertResponse, error)
}

type alerterServiceClient struct {
	cc *grpc.ClientConn
}

func NewAlerterServiceClient(cc *grpc.ClientConn) AlerterServiceClient {
	return &alerterServiceClient{cc}
}

func (c *alerterServiceClient) Override(ctx context.Context, in *OverrideRequest, opts ...grpc.CallOption) (*common.Void, error) {
	out := new(common.Void)
	err := grpc.Invoke(ctx, "/alerter.AlerterService/Override", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *alerterServiceClient) GetCurrentAlertType(ctx context.Context, in *common.Void, opts ...grpc.CallOption) (*AlertResponse, error) {
	out := new(AlertResponse)
	err := grpc.Invoke(ctx, "/alerter.AlerterService/GetCurrentAlertType", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for AlerterService service

type AlerterServiceServer interface {
	Override(context.Context, *OverrideRequest) (*common.Void, error)
	GetCurrentAlertType(context.Context, *common.Void) (*AlertResponse, error)
}

func RegisterAlerterServiceServer(s *grpc.Server, srv AlerterServiceServer) {
	s.RegisterService(&_AlerterService_serviceDesc, srv)
}

func _AlerterService_Override_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OverrideRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AlerterServiceServer).Override(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/alerter.AlerterService/Override",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AlerterServiceServer).Override(ctx, req.(*OverrideRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AlerterService_GetCurrentAlertType_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(common.Void)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AlerterServiceServer).GetCurrentAlertType(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/alerter.AlerterService/GetCurrentAlertType",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AlerterServiceServer).GetCurrentAlertType(ctx, req.(*common.Void))
	}
	return interceptor(ctx, in, info, handler)
}

var _AlerterService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "alerter.AlerterService",
	HandlerType: (*AlerterServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Override",
			Handler:    _AlerterService_Override_Handler,
		},
		{
			MethodName: "GetCurrentAlertType",
			Handler:    _AlerterService_GetCurrentAlertType_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "golang.conradwood.net/apis/alerter/alerter.proto",
}

func init() { proto.RegisterFile("golang.conradwood.net/apis/alerter/alerter.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 265 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x7c, 0x50, 0x41, 0x4b, 0xc3, 0x30,
	0x18, 0xa5, 0x0a, 0x9b, 0xfb, 0x70, 0x0a, 0x11, 0x46, 0xd9, 0x41, 0x46, 0xf1, 0xd0, 0x53, 0x26,
	0xf3, 0xe8, 0x69, 0x8a, 0xec, 0xa2, 0x08, 0xd9, 0xf0, 0x1e, 0xdb, 0x8f, 0x12, 0x58, 0xf3, 0xd5,
	0xe4, 0xeb, 0xc4, 0xa3, 0xff, 0x5c, 0xba, 0x26, 0xb2, 0x79, 0xf0, 0xf4, 0xf2, 0x92, 0xbc, 0xc7,
	0x7b, 0x0f, 0x6e, 0x2b, 0xda, 0x6a, 0x5b, 0xc9, 0x82, 0xac, 0xd3, 0xe5, 0x27, 0x51, 0x29, 0x2d,
	0xf2, 0x5c, 0x37, 0xc6, 0xcf, 0xf5, 0x16, 0x1d, 0xa3, 0x8b, 0x28, 0x1b, 0x47, 0x4c, 0x62, 0x18,
	0xe8, 0x54, 0xfe, 0x23, 0x2d, 0xa8, 0xae, 0xc9, 0x06, 0xe8, 0x85, 0xd9, 0x13, 0x5c, 0xbe, 0xee,
	0xd0, 0x39, 0x53, 0xa2, 0xc2, 0x8f, 0x16, 0x3d, 0x8b, 0x14, 0x86, 0x2f, 0xe8, 0xbd, 0xae, 0x30,
	0x4d, 0x66, 0x49, 0x3e, 0x52, 0x91, 0x76, 0x2f, 0x1b, 0x53, 0x23, 0xb5, 0x9c, 0x9e, 0xcc, 0x92,
	0x7c, 0xac, 0x22, 0xcd, 0x56, 0x30, 0x5e, 0x76, 0x09, 0x14, 0xfa, 0x86, 0xac, 0x47, 0x31, 0x81,
	0xc1, 0x9a, 0x35, 0xb7, 0x3e, 0x78, 0x04, 0x26, 0xae, 0x01, 0xfa, 0xd3, 0xb3, 0xf1, 0x9d, 0xcb,
	0x69, 0x3e, 0x52, 0x07, 0x37, 0x8b, 0xef, 0x04, 0x2e, 0x96, 0x7d, 0x97, 0x35, 0xba, 0x9d, 0x29,
	0x50, 0x2c, 0xe0, 0x2c, 0x46, 0x14, 0xa9, 0x8c, 0xbd, 0xff, 0xa4, 0x9e, 0x9e, 0xcb, 0xd0, 0xeb,
	0x8d, 0x4c, 0x29, 0xee, 0xe1, 0x6a, 0x85, 0xfc, 0xd8, 0x3a, 0x87, 0x96, 0xf7, 0x7e, 0x9b, 0xaf,
	0x06, 0xc5, 0xd1, 0xa7, 0xe9, 0xe4, 0xd7, 0xec, 0x28, 0xfb, 0xc3, 0x0d, 0x64, 0x16, 0xf9, 0x70,
	0xc2, 0x30, 0x6a, 0xb7, 0x62, 0xd4, 0xbc, 0x0f, 0xf6, 0x03, 0xde, 0xfd, 0x04, 0x00, 0x00, 0xff,
	0xff, 0x1d, 0x80, 0x59, 0xe5, 0xad, 0x01, 0x00, 0x00,
}
