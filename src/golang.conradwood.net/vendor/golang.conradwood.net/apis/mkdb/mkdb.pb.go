// Code generated by protoc-gen-go.
// source: golang.conradwood.net/apis/mkdb/mkdb.proto
// DO NOT EDIT!

/*
Package mkdb is a generated protocol buffer package.

It is generated from these files:
	golang.conradwood.net/apis/mkdb/mkdb.proto

It has these top-level messages:
	ProtoDef
	ProtoField
	GetMessagesRequest
	AMessage
	GetMessageResponse
	CreateDBRequest
	CreateDBResponse
*/
package mkdb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// preliminary definition...
type ProtoDef struct {
	Fields []*ProtoField `protobuf:"bytes,1,rep,name=Fields" json:"Fields,omitempty"`
	// e.g. "golang.conradwood.net/apis/common"
	ImportPath string `protobuf:"bytes,2,opt,name=ImportPath" json:"ImportPath,omitempty"`
	// e.g. Measurement
	Name string `protobuf:"bytes,3,opt,name=Name" json:"Name,omitempty"`
}

func (m *ProtoDef) Reset()                    { *m = ProtoDef{} }
func (m *ProtoDef) String() string            { return proto.CompactTextString(m) }
func (*ProtoDef) ProtoMessage()               {}
func (*ProtoDef) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *ProtoDef) GetFields() []*ProtoField {
	if m != nil {
		return m.Fields
	}
	return nil
}

func (m *ProtoDef) GetImportPath() string {
	if m != nil {
		return m.ImportPath
	}
	return ""
}

func (m *ProtoDef) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type ProtoField struct {
	Name       string            `protobuf:"bytes,1,opt,name=Name" json:"Name,omitempty"`
	Type       int32             `protobuf:"varint,2,opt,name=Type" json:"Type,omitempty"`
	PrimaryKey bool              `protobuf:"varint,3,opt,name=PrimaryKey" json:"PrimaryKey,omitempty"`
	Options    map[string]string `protobuf:"bytes,4,rep,name=Options" json:"Options,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *ProtoField) Reset()                    { *m = ProtoField{} }
func (m *ProtoField) String() string            { return proto.CompactTextString(m) }
func (*ProtoField) ProtoMessage()               {}
func (*ProtoField) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *ProtoField) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ProtoField) GetType() int32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *ProtoField) GetPrimaryKey() bool {
	if m != nil {
		return m.PrimaryKey
	}
	return false
}

func (m *ProtoField) GetOptions() map[string]string {
	if m != nil {
		return m.Options
	}
	return nil
}

type GetMessagesRequest struct {
	ProtoFile string `protobuf:"bytes,1,opt,name=ProtoFile" json:"ProtoFile,omitempty"`
}

func (m *GetMessagesRequest) Reset()                    { *m = GetMessagesRequest{} }
func (m *GetMessagesRequest) String() string            { return proto.CompactTextString(m) }
func (*GetMessagesRequest) ProtoMessage()               {}
func (*GetMessagesRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *GetMessagesRequest) GetProtoFile() string {
	if m != nil {
		return m.ProtoFile
	}
	return ""
}

type AMessage struct {
	Name string `protobuf:"bytes,1,opt,name=Name" json:"Name,omitempty"`
}

func (m *AMessage) Reset()                    { *m = AMessage{} }
func (m *AMessage) String() string            { return proto.CompactTextString(m) }
func (*AMessage) ProtoMessage()               {}
func (*AMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *AMessage) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type GetMessageResponse struct {
	Messages []*AMessage `protobuf:"bytes,1,rep,name=Messages" json:"Messages,omitempty"`
}

func (m *GetMessageResponse) Reset()                    { *m = GetMessageResponse{} }
func (m *GetMessageResponse) String() string            { return proto.CompactTextString(m) }
func (*GetMessageResponse) ProtoMessage()               {}
func (*GetMessageResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *GetMessageResponse) GetMessages() []*AMessage {
	if m != nil {
		return m.Messages
	}
	return nil
}

type CreateDBRequest struct {
	ProtoFile     string `protobuf:"bytes,1,opt,name=ProtoFile" json:"ProtoFile,omitempty"`
	Message       string `protobuf:"bytes,2,opt,name=Message" json:"Message,omitempty"`
	Package       string `protobuf:"bytes,3,opt,name=Package" json:"Package,omitempty"`
	IDField       string `protobuf:"bytes,4,opt,name=IDField" json:"IDField,omitempty"`
	ImportPath    string `protobuf:"bytes,5,opt,name=ImportPath" json:"ImportPath,omitempty"`
	ProtoFileName string `protobuf:"bytes,6,opt,name=ProtoFileName" json:"ProtoFileName,omitempty"`
	TableName     string `protobuf:"bytes,7,opt,name=TableName" json:"TableName,omitempty"`
	TablePrefix   string `protobuf:"bytes,8,opt,name=TablePrefix" json:"TablePrefix,omitempty"`
}

func (m *CreateDBRequest) Reset()                    { *m = CreateDBRequest{} }
func (m *CreateDBRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateDBRequest) ProtoMessage()               {}
func (*CreateDBRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *CreateDBRequest) GetProtoFile() string {
	if m != nil {
		return m.ProtoFile
	}
	return ""
}

func (m *CreateDBRequest) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *CreateDBRequest) GetPackage() string {
	if m != nil {
		return m.Package
	}
	return ""
}

func (m *CreateDBRequest) GetIDField() string {
	if m != nil {
		return m.IDField
	}
	return ""
}

func (m *CreateDBRequest) GetImportPath() string {
	if m != nil {
		return m.ImportPath
	}
	return ""
}

func (m *CreateDBRequest) GetProtoFileName() string {
	if m != nil {
		return m.ProtoFileName
	}
	return ""
}

func (m *CreateDBRequest) GetTableName() string {
	if m != nil {
		return m.TableName
	}
	return ""
}

func (m *CreateDBRequest) GetTablePrefix() string {
	if m != nil {
		return m.TablePrefix
	}
	return ""
}

type CreateDBResponse struct {
	GoFile string `protobuf:"bytes,1,opt,name=GoFile" json:"GoFile,omitempty"`
}

func (m *CreateDBResponse) Reset()                    { *m = CreateDBResponse{} }
func (m *CreateDBResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateDBResponse) ProtoMessage()               {}
func (*CreateDBResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *CreateDBResponse) GetGoFile() string {
	if m != nil {
		return m.GoFile
	}
	return ""
}

func init() {
	proto.RegisterType((*ProtoDef)(nil), "mkdb.ProtoDef")
	proto.RegisterType((*ProtoField)(nil), "mkdb.ProtoField")
	proto.RegisterType((*GetMessagesRequest)(nil), "mkdb.GetMessagesRequest")
	proto.RegisterType((*AMessage)(nil), "mkdb.AMessage")
	proto.RegisterType((*GetMessageResponse)(nil), "mkdb.GetMessageResponse")
	proto.RegisterType((*CreateDBRequest)(nil), "mkdb.CreateDBRequest")
	proto.RegisterType((*CreateDBResponse)(nil), "mkdb.CreateDBResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for MKDB service

type MKDBClient interface {
	// given the contents of a .proto file will parse it and return the messages contained in the file
	GetMessages(ctx context.Context, in *GetMessagesRequest, opts ...grpc.CallOption) (*GetMessageResponse, error)
	// given a protofile and a message name will return Database Accessor helpers in a .go source file
	CreateDBFile(ctx context.Context, in *CreateDBRequest, opts ...grpc.CallOption) (*CreateDBResponse, error)
}

type mKDBClient struct {
	cc *grpc.ClientConn
}

func NewMKDBClient(cc *grpc.ClientConn) MKDBClient {
	return &mKDBClient{cc}
}

func (c *mKDBClient) GetMessages(ctx context.Context, in *GetMessagesRequest, opts ...grpc.CallOption) (*GetMessageResponse, error) {
	out := new(GetMessageResponse)
	err := grpc.Invoke(ctx, "/mkdb.MKDB/GetMessages", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mKDBClient) CreateDBFile(ctx context.Context, in *CreateDBRequest, opts ...grpc.CallOption) (*CreateDBResponse, error) {
	out := new(CreateDBResponse)
	err := grpc.Invoke(ctx, "/mkdb.MKDB/CreateDBFile", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for MKDB service

type MKDBServer interface {
	// given the contents of a .proto file will parse it and return the messages contained in the file
	GetMessages(context.Context, *GetMessagesRequest) (*GetMessageResponse, error)
	// given a protofile and a message name will return Database Accessor helpers in a .go source file
	CreateDBFile(context.Context, *CreateDBRequest) (*CreateDBResponse, error)
}

func RegisterMKDBServer(s *grpc.Server, srv MKDBServer) {
	s.RegisterService(&_MKDB_serviceDesc, srv)
}

func _MKDB_GetMessages_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetMessagesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MKDBServer).GetMessages(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mkdb.MKDB/GetMessages",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MKDBServer).GetMessages(ctx, req.(*GetMessagesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MKDB_CreateDBFile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateDBRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MKDBServer).CreateDBFile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mkdb.MKDB/CreateDBFile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MKDBServer).CreateDBFile(ctx, req.(*CreateDBRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _MKDB_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mkdb.MKDB",
	HandlerType: (*MKDBServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetMessages",
			Handler:    _MKDB_GetMessages_Handler,
		},
		{
			MethodName: "CreateDBFile",
			Handler:    _MKDB_CreateDBFile_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "golang.conradwood.net/apis/mkdb/mkdb.proto",
}

func init() { proto.RegisterFile("golang.conradwood.net/apis/mkdb/mkdb.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 473 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x8c, 0x53, 0xcd, 0x6e, 0xd3, 0x40,
	0x10, 0x96, 0x13, 0x27, 0x71, 0x27, 0x05, 0xa2, 0x15, 0x54, 0x56, 0x04, 0x25, 0x58, 0x1c, 0xa2,
	0x1c, 0x5c, 0x29, 0x1c, 0x40, 0x95, 0x90, 0x68, 0x08, 0x54, 0x55, 0x55, 0xb0, 0xac, 0xbe, 0xc0,
	0xa6, 0x99, 0xa6, 0x56, 0x12, 0xaf, 0xf1, 0x6e, 0x01, 0x9f, 0xb9, 0xf0, 0x6a, 0xbc, 0x15, 0xda,
	0xf1, 0xda, 0x59, 0x1c, 0x0e, 0xbd, 0x58, 0x3b, 0xdf, 0xf7, 0xcd, 0xbf, 0x07, 0x26, 0x2b, 0xb1,
	0xe1, 0xe9, 0x2a, 0xbc, 0x11, 0x69, 0xce, 0x97, 0x3f, 0x84, 0x58, 0x86, 0x29, 0xaa, 0x13, 0x9e,
	0x25, 0xf2, 0x64, 0xbb, 0x5e, 0x2e, 0xe8, 0x13, 0x66, 0xb9, 0x50, 0x82, 0xb9, 0xfa, 0x1d, 0xdc,
	0x81, 0x17, 0x69, 0x73, 0x8e, 0xb7, 0x6c, 0x0c, 0xdd, 0xcf, 0x09, 0x6e, 0x96, 0xd2, 0x77, 0x46,
	0xed, 0x71, 0x7f, 0x3a, 0x08, 0x49, 0x4e, 0x3c, 0x11, 0xb1, 0xe1, 0xd9, 0x31, 0xc0, 0xc5, 0x36,
	0x13, 0xb9, 0x8a, 0xb8, 0xba, 0xf3, 0x5b, 0x23, 0x67, 0x7c, 0x10, 0x5b, 0x08, 0x63, 0xe0, 0x7e,
	0xe1, 0x5b, 0xf4, 0xdb, 0xc4, 0xd0, 0x3b, 0xf8, 0xe3, 0x00, 0xec, 0x42, 0xd5, 0x12, 0x67, 0x27,
	0xd1, 0xd8, 0x75, 0x91, 0x21, 0x05, 0xec, 0xc4, 0xf4, 0xd6, 0xa9, 0xa2, 0x3c, 0xd9, 0xf2, 0xbc,
	0xb8, 0xc4, 0x82, 0x02, 0x7a, 0xb1, 0x85, 0xb0, 0xb7, 0xd0, 0xfb, 0x9a, 0xa9, 0x44, 0xa4, 0xd2,
	0x77, 0xa9, 0xea, 0x17, 0xcd, 0xaa, 0x43, 0xc3, 0x7f, 0x4a, 0x55, 0x5e, 0xc4, 0x95, 0x7a, 0x78,
	0x0a, 0x87, 0x36, 0xc1, 0x06, 0xd0, 0x5e, 0x63, 0x61, 0xea, 0xd1, 0x4f, 0xf6, 0x14, 0x3a, 0xdf,
	0xf9, 0xe6, 0x1e, 0x4d, 0x83, 0xa5, 0x71, 0xda, 0x7a, 0xe7, 0x04, 0x53, 0x60, 0xe7, 0xa8, 0xae,
	0x50, 0x4a, 0xbe, 0x42, 0x19, 0xe3, 0xb7, 0x7b, 0x94, 0x8a, 0x3d, 0x87, 0x03, 0x93, 0x75, 0x53,
	0xf5, 0xb5, 0x03, 0x82, 0x63, 0xf0, 0xce, 0x8c, 0xc7, 0xff, 0x9a, 0x0f, 0x3e, 0xd8, 0x31, 0x63,
	0x94, 0x99, 0x48, 0x25, 0xb2, 0x09, 0x78, 0x55, 0x1a, 0xb3, 0x95, 0xc7, 0x65, 0x7f, 0x55, 0xac,
	0xb8, 0xe6, 0x83, 0x5f, 0x2d, 0x78, 0xf2, 0x31, 0x47, 0xae, 0x70, 0x3e, 0x7b, 0x50, 0x4d, 0xcc,
	0x87, 0x9e, 0xf1, 0x36, 0x3d, 0x56, 0xa6, 0x66, 0x22, 0x7e, 0xb3, 0xd6, 0x4c, 0xb9, 0xc4, 0xca,
	0xd4, 0xcc, 0xc5, 0x9c, 0x06, 0xeb, 0xbb, 0x25, 0x63, 0xcc, 0xc6, 0x5f, 0xd1, 0xd9, 0xfb, 0x2b,
	0x5e, 0xc3, 0xa3, 0x3a, 0x35, 0xb5, 0xdf, 0x25, 0xc9, 0xbf, 0xa0, 0xae, 0xf8, 0x9a, 0x2f, 0x8c,
	0xa2, 0x57, 0x56, 0x5c, 0x03, 0x6c, 0x04, 0x7d, 0x32, 0xa2, 0x1c, 0x6f, 0x93, 0x9f, 0xbe, 0x47,
	0xbc, 0x0d, 0x05, 0x13, 0x18, 0xec, 0x86, 0x60, 0xa6, 0x78, 0x04, 0xdd, 0x73, 0x7b, 0x04, 0xc6,
	0x9a, 0xfe, 0x76, 0xc0, 0xbd, 0xba, 0x9c, 0xcf, 0xd8, 0x19, 0xf4, 0xad, 0x85, 0x32, 0xbf, 0x9c,
	0xf1, 0xfe, 0x8e, 0x87, 0x7b, 0x4c, 0x9d, 0xe3, 0x3d, 0x1c, 0x56, 0x79, 0x69, 0xb6, 0xcf, 0x4a,
	0x65, 0x63, 0x21, 0xc3, 0xa3, 0x26, 0x5c, 0xba, 0xcf, 0x5e, 0xc1, 0xcb, 0x14, 0x95, 0x7d, 0xb9,
	0xe6, 0x96, 0xf5, 0xf1, 0x92, 0xcf, 0xa2, 0x4b, 0x87, 0xfb, 0xe6, 0x6f, 0x00, 0x00, 0x00, 0xff,
	0xff, 0x5a, 0x16, 0x9b, 0x9f, 0xe6, 0x03, 0x00, 0x00,
}
