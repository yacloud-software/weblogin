// Code generated by protoc-gen-go.
// source: golang.conradwood.net/apis/bankholidays/bankholidays.proto
// DO NOT EDIT!

/*
Package bankholidays is a generated protocol buffer package.

It is generated from these files:
	golang.conradwood.net/apis/bankholidays/bankholidays.proto

It has these top-level messages:
	PingRequest
	PingResponse
	BankHoliday
*/
package bankholidays

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import common "golang.conradwood.net/apis/common"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// comment: message pingrequest
type PingRequest struct {
	// comment: payload
	Payload string `protobuf:"bytes,2,opt,name=Payload" json:"Payload,omitempty"`
	// comment: sequencenumber
	SequenceNumber uint32 `protobuf:"varint,1,opt,name=SequenceNumber" json:"SequenceNumber,omitempty"`
}

func (m *PingRequest) Reset()                    { *m = PingRequest{} }
func (m *PingRequest) String() string            { return proto.CompactTextString(m) }
func (*PingRequest) ProtoMessage()               {}
func (*PingRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *PingRequest) GetPayload() string {
	if m != nil {
		return m.Payload
	}
	return ""
}

func (m *PingRequest) GetSequenceNumber() uint32 {
	if m != nil {
		return m.SequenceNumber
	}
	return 0
}

// comment: message pingresponse
type PingResponse struct {
	// comment: field pingresponse.response
	Response string `protobuf:"bytes,1,opt,name=Response" json:"Response,omitempty"`
}

func (m *PingResponse) Reset()                    { *m = PingResponse{} }
func (m *PingResponse) String() string            { return proto.CompactTextString(m) }
func (*PingResponse) ProtoMessage()               {}
func (*PingResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *PingResponse) GetResponse() string {
	if m != nil {
		return m.Response
	}
	return ""
}

type BankHoliday struct {
	Day     uint32   `protobuf:"varint,1,opt,name=Day" json:"Day,omitempty"`
	Month   uint32   `protobuf:"varint,2,opt,name=Month" json:"Month,omitempty"`
	Year    uint32   `protobuf:"varint,3,opt,name=Year" json:"Year,omitempty"`
	Name    string   `protobuf:"bytes,4,opt,name=Name" json:"Name,omitempty"`
	Regions []string `protobuf:"bytes,5,rep,name=Regions" json:"Regions,omitempty"`
}

func (m *BankHoliday) Reset()                    { *m = BankHoliday{} }
func (m *BankHoliday) String() string            { return proto.CompactTextString(m) }
func (*BankHoliday) ProtoMessage()               {}
func (*BankHoliday) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *BankHoliday) GetDay() uint32 {
	if m != nil {
		return m.Day
	}
	return 0
}

func (m *BankHoliday) GetMonth() uint32 {
	if m != nil {
		return m.Month
	}
	return 0
}

func (m *BankHoliday) GetYear() uint32 {
	if m != nil {
		return m.Year
	}
	return 0
}

func (m *BankHoliday) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *BankHoliday) GetRegions() []string {
	if m != nil {
		return m.Regions
	}
	return nil
}

func init() {
	proto.RegisterType((*PingRequest)(nil), "bankholidays.PingRequest")
	proto.RegisterType((*PingResponse)(nil), "bankholidays.PingResponse")
	proto.RegisterType((*BankHoliday)(nil), "bankholidays.BankHoliday")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for BankHolidays service

type BankHolidaysClient interface {
	// comment: rpc ping
	Ping(ctx context.Context, in *common.Void, opts ...grpc.CallOption) (*PingResponse, error)
}

type bankHolidaysClient struct {
	cc *grpc.ClientConn
}

func NewBankHolidaysClient(cc *grpc.ClientConn) BankHolidaysClient {
	return &bankHolidaysClient{cc}
}

func (c *bankHolidaysClient) Ping(ctx context.Context, in *common.Void, opts ...grpc.CallOption) (*PingResponse, error) {
	out := new(PingResponse)
	err := grpc.Invoke(ctx, "/bankholidays.BankHolidays/Ping", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for BankHolidays service

type BankHolidaysServer interface {
	// comment: rpc ping
	Ping(context.Context, *common.Void) (*PingResponse, error)
}

func RegisterBankHolidaysServer(s *grpc.Server, srv BankHolidaysServer) {
	s.RegisterService(&_BankHolidays_serviceDesc, srv)
}

func _BankHolidays_Ping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(common.Void)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BankHolidaysServer).Ping(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bankholidays.BankHolidays/Ping",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BankHolidaysServer).Ping(ctx, req.(*common.Void))
	}
	return interceptor(ctx, in, info, handler)
}

var _BankHolidays_serviceDesc = grpc.ServiceDesc{
	ServiceName: "bankholidays.BankHolidays",
	HandlerType: (*BankHolidaysServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Ping",
			Handler:    _BankHolidays_Ping_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "golang.conradwood.net/apis/bankholidays/bankholidays.proto",
}

func init() {
	proto.RegisterFile("golang.conradwood.net/apis/bankholidays/bankholidays.proto", fileDescriptor0)
}

var fileDescriptor0 = []byte{
	// 291 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x7c, 0x90, 0x3f, 0x4f, 0xc3, 0x30,
	0x10, 0xc5, 0x55, 0xda, 0x02, 0xbd, 0xa6, 0x08, 0x59, 0x0c, 0x56, 0xa6, 0x2a, 0x03, 0x14, 0x06,
	0x17, 0xc1, 0xc6, 0x84, 0x2a, 0x06, 0x16, 0x4a, 0x65, 0x24, 0x24, 0x46, 0x27, 0xb1, 0xd2, 0xa8,
	0xc9, 0x5d, 0x88, 0x53, 0x55, 0xf9, 0xf6, 0xc8, 0x4e, 0x8a, 0x12, 0x06, 0x26, 0xbf, 0xf7, 0xe4,
	0xfb, 0xf7, 0x83, 0xa7, 0x84, 0x32, 0x85, 0x89, 0x88, 0x08, 0x4b, 0x15, 0x1f, 0x88, 0x62, 0x81,
	0xba, 0x5a, 0xaa, 0x22, 0x35, 0xcb, 0x50, 0xe1, 0x6e, 0x4b, 0x59, 0x1a, 0xab, 0xba, 0x6f, 0x44,
	0x51, 0x52, 0x45, 0xcc, 0xeb, 0x66, 0xbe, 0xf8, 0xa7, 0x53, 0x44, 0x79, 0x4e, 0xd8, 0x3e, 0x4d,
	0x75, 0xf0, 0x0e, 0xd3, 0x4d, 0x8a, 0x89, 0xd4, 0xdf, 0x7b, 0x6d, 0x2a, 0xc6, 0xe1, 0x6c, 0xa3,
	0xea, 0x8c, 0x54, 0xcc, 0x4f, 0xe6, 0x83, 0xc5, 0x44, 0x1e, 0x2d, 0xbb, 0x86, 0x8b, 0x0f, 0xfb,
	0x09, 0x23, 0xbd, 0xde, 0xe7, 0xa1, 0x2e, 0xf9, 0x60, 0x3e, 0x58, 0xcc, 0xe4, 0x9f, 0x34, 0xb8,
	0x03, 0xaf, 0x69, 0x68, 0x0a, 0x42, 0xa3, 0x99, 0x0f, 0xe7, 0x47, 0xed, 0x2a, 0x26, 0xf2, 0xd7,
	0x07, 0x07, 0x98, 0xae, 0x14, 0xee, 0x5e, 0x9b, 0xe5, 0xd9, 0x25, 0x0c, 0x5f, 0x54, 0xdd, 0xf6,
	0xb5, 0x92, 0x5d, 0xc1, 0xf8, 0x8d, 0xb0, 0xda, 0xba, 0x65, 0x66, 0xb2, 0x31, 0x8c, 0xc1, 0xe8,
	0x4b, 0xab, 0x92, 0x0f, 0x5d, 0xe8, 0xb4, 0xcd, 0xd6, 0x2a, 0xd7, 0x7c, 0xe4, 0x46, 0x38, 0x6d,
	0x8f, 0x91, 0x3a, 0x49, 0x09, 0x0d, 0x1f, 0xcf, 0x87, 0xf6, 0x98, 0xd6, 0x3e, 0x3c, 0x83, 0xd7,
	0x19, 0x6c, 0xd8, 0x3d, 0x8c, 0xec, 0xd2, 0xcc, 0x13, 0x2d, 0x9c, 0x4f, 0x4a, 0x63, 0xdf, 0x17,
	0x3d, 0xdc, 0xdd, 0xb3, 0x56, 0xb7, 0x70, 0x83, 0xba, 0xea, 0x62, 0x6e, 0xc1, 0x5b, 0xd2, 0xbd,
	0xba, 0xf0, 0xd4, 0x91, 0x7e, 0xfc, 0x09, 0x00, 0x00, 0xff, 0xff, 0xeb, 0xcb, 0xa2, 0x75, 0xe5,
	0x01, 0x00, 0x00,
}
