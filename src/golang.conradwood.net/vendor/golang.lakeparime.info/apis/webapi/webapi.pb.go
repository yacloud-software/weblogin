// Code generated by protoc-gen-go.
// source: golang.lakeparime.info/apis/webapi/webapi.proto
// DO NOT EDIT!

/*
Package webapi is a generated protocol buffer package.

It is generated from these files:
	golang.lakeparime.info/apis/webapi/webapi.proto

It has these top-level messages:
	PingResponse
*/
package webapi

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import common "golang.conradwood.net/apis/common"
import auth "golang.conradwood.net/apis/auth"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// comment: message pingresponse
type PingResponse struct {
	// comment: field pingresponse.response
	Response string `protobuf:"bytes,1,opt,name=Response" json:"Response,omitempty"`
}

func (m *PingResponse) Reset()                    { *m = PingResponse{} }
func (m *PingResponse) String() string            { return proto.CompactTextString(m) }
func (*PingResponse) ProtoMessage()               {}
func (*PingResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *PingResponse) GetResponse() string {
	if m != nil {
		return m.Response
	}
	return ""
}

func init() {
	proto.RegisterType((*PingResponse)(nil), "webapi.PingResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for WebApi service

type WebApiClient interface {
	// example rpc
	Ping(ctx context.Context, in *common.Void, opts ...grpc.CallOption) (*PingResponse, error)
	WhoAmI(ctx context.Context, in *common.Void, opts ...grpc.CallOption) (*auth.User, error)
}

type webApiClient struct {
	cc *grpc.ClientConn
}

func NewWebApiClient(cc *grpc.ClientConn) WebApiClient {
	return &webApiClient{cc}
}

func (c *webApiClient) Ping(ctx context.Context, in *common.Void, opts ...grpc.CallOption) (*PingResponse, error) {
	out := new(PingResponse)
	err := grpc.Invoke(ctx, "/webapi.WebApi/Ping", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *webApiClient) WhoAmI(ctx context.Context, in *common.Void, opts ...grpc.CallOption) (*auth.User, error) {
	out := new(auth.User)
	err := grpc.Invoke(ctx, "/webapi.WebApi/WhoAmI", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for WebApi service

type WebApiServer interface {
	// example rpc
	Ping(context.Context, *common.Void) (*PingResponse, error)
	WhoAmI(context.Context, *common.Void) (*auth.User, error)
}

func RegisterWebApiServer(s *grpc.Server, srv WebApiServer) {
	s.RegisterService(&_WebApi_serviceDesc, srv)
}

func _WebApi_Ping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(common.Void)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WebApiServer).Ping(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/webapi.WebApi/Ping",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WebApiServer).Ping(ctx, req.(*common.Void))
	}
	return interceptor(ctx, in, info, handler)
}

func _WebApi_WhoAmI_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(common.Void)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WebApiServer).WhoAmI(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/webapi.WebApi/WhoAmI",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WebApiServer).WhoAmI(ctx, req.(*common.Void))
	}
	return interceptor(ctx, in, info, handler)
}

var _WebApi_serviceDesc = grpc.ServiceDesc{
	ServiceName: "webapi.WebApi",
	HandlerType: (*WebApiServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Ping",
			Handler:    _WebApi_Ping_Handler,
		},
		{
			MethodName: "WhoAmI",
			Handler:    _WebApi_WhoAmI_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "golang.lakeparime.info/apis/webapi/webapi.proto",
}

func init() { proto.RegisterFile("golang.lakeparime.info/apis/webapi/webapi.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 210 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x7c, 0x90, 0x31, 0x4b, 0xc6, 0x30,
	0x10, 0x86, 0xf9, 0x40, 0x82, 0x1e, 0x9d, 0x82, 0x83, 0x04, 0x07, 0xe9, 0x24, 0x1d, 0xae, 0xa0,
	0xbf, 0xa0, 0x6e, 0x6e, 0x52, 0xd0, 0xba, 0xa6, 0xed, 0xd9, 0x06, 0x9b, 0x5c, 0x48, 0x2a, 0xfd,
	0xfb, 0xd2, 0x26, 0x8a, 0x3a, 0xb8, 0xe4, 0x72, 0xf0, 0x3e, 0x6f, 0x1e, 0x02, 0xf5, 0xc4, 0x8b,
	0x76, 0x13, 0x2e, 0xfa, 0x9d, 0xbc, 0x0e, 0xc6, 0x12, 0x1a, 0xf7, 0xc6, 0xb5, 0xf6, 0x26, 0xd6,
	0x1b, 0xf5, 0xda, 0x9b, 0x3c, 0xd0, 0x07, 0x5e, 0x59, 0x8a, 0xb4, 0x29, 0xcc, 0xe0, 0xc0, 0x2e,
	0xe8, 0x71, 0x63, 0x1e, 0xd1, 0xd1, 0x9a, 0xb8, 0x81, 0xad, 0x65, 0x97, 0x47, 0xe2, 0x54, 0xf5,
	0x4f, 0x5e, 0x7f, 0xac, 0xf3, 0x71, 0xa4, 0x6c, 0x59, 0x41, 0xf1, 0x64, 0xdc, 0xd4, 0x52, 0xf4,
	0xec, 0x22, 0x49, 0x05, 0xe7, 0x5f, 0xf7, 0xab, 0xd3, 0xcd, 0xe9, 0xf6, 0xa2, 0xfd, 0xde, 0xef,
	0x5e, 0x41, 0x74, 0xd4, 0x37, 0xde, 0xc8, 0x0a, 0xce, 0x76, 0x4a, 0x16, 0x98, 0x1f, 0x7e, 0x61,
	0x33, 0xaa, 0x4b, 0xcc, 0xfa, 0xbf, 0x1a, 0x4b, 0x10, 0xdd, 0xcc, 0x8d, 0x7d, 0xfc, 0x93, 0x06,
	0x3c, 0x34, 0x9e, 0x23, 0x85, 0x87, 0x6b, 0x50, 0x03, 0xdb, 0x9f, 0x3f, 0xb3, 0xcb, 0xe6, 0xba,
	0x5e, 0x1c, 0xaa, 0xf7, 0x9f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x44, 0xc9, 0xc1, 0x8b, 0x41, 0x01,
	0x00, 0x00,
}
